devtools::install_github("eiriksen/eiriktools")
library(lubridate)
library(tidyverse)
library(lammidrive) # devtools::install_github("eiriksen/lammidrive")
library(datepit) # devtools::install_github("eiriksen/datepit")
library(eiriktools) # devtools::install_github("eiriksen/eiriktools")
setwd("C:/Users/asheimer/files/Drive/delte prosjekter/Lammi salmon/Project Big Tanks")
tb_fish_a <-
eiriktools::read_delim_multi(
list_filepaths =list.files(pattern="pheno-P\\d.*txt",recursive=T),
col_types = list(
id              = col_integer(),
mature_female   = col_character(),
dnaID           = col_character(),
ID_fem          = col_character(),
weight_postEggs = col_number()
)
) %>%
mutate(pit = toupper(pit)) %>%
datepit_to_ID(tb_pit = read_delim("lookup - lammisalmon pit to ID - December 2021.txt"))
datepit_to_ID2 = function(tb, tb_pit){
require(lubridate)
# check that pit and date columns exist in the table
if (!"date" %in% colnames(tb)) stop("date column missing from tb")
if (!"pit" %in% colnames(tb)) stop("pit column missing from tb")
if (!"date" %in% colnames(tb_pit)) stop("date column missing from tb")
if (!"pit" %in% colnames(tb_pit)) stop("pit column missing from tb")
# save the old date column in the tb before messing around with it
.oldDate <- tb$date
# format dates, if necessary
tb_pit$date <- ymd(tb_pit$date)
tb$date     <- ymd(tb$date)
# the algorithm
tb$ID <- apply(tb,MARGIN = 1,FUN=function(row){
# For every row in the table...
# Get the pit tag and date of this row
pit_r  <- row$pit
date_r <- row$date
# if any of those are NA, then ID is NA
if (is.na(pit_r) | is.na(date_r)){
return(NA)
}
# get all the ID's that match this PIT tag and have a date
# - that is registered at the same date or before
# (excluding ID's that are registered AFTER this pit-tag is read)
IDs <- tb_pit[tb_pit$pit==pit_r & tb_pit$date <= date_r,]
if (nrow(IDs)==0){
# If none found, ID is nA
return(NA)
}
else {
# If some are found, then pick the ID that was registered last
ID = IDs[IDs$date == max(IDs$date),]$ID %>% unlist()
if(length(ID)!=1)
return(NA)
else
return(ID)
}
})
# put the old date column back and return the table
tb$date <- .oldDate
return(tb)
}
tb_fish_b <-
eiriktools::read_delim_multi(
list_filepaths =list.files(pattern="pheno-P\\d.*txt",recursive=T),
col_types = list(
id              = col_integer(),
mature_female   = col_character(),
dnaID           = col_character(),
ID_fem          = col_character(),
weight_postEggs = col_number()
)
) %>%
mutate(pit = toupper(pit)) %>%
datepit_to_ID2(tb_pit = read_delim("lookup - lammisalmon pit to ID - December 2021.txt"))
tb_fish <-
eiriktools::read_delim_multi(
list_filepaths =list.files(pattern="pheno-P\\d.*txt",recursive=T),
col_types = list(
id              = col_integer(),
mature_female   = col_character(),
dnaID           = col_character(),
ID_fem          = col_character(),
weight_postEggs = col_number()
)
) %>%
mutate(pit = toupper(pit))
tb_pit <- read_delim("lookup - lammisalmon pit to ID - December 2021.txt")
tb <- tb_fish
tb_pit$date <- ymd(tb_pit$date)
tb$date     <- ymd(tb$date)
apply(tb,MARGIN = 1,FUN=function(row){
# For every row in the table...
# Get the pit tag and date of this row
pit_r  <- row$pit
date_r <- row$date
# if any of those are NA, then ID is NA
if (is.na(pit_r) | is.na(date_r)){
return(NA)
}
# get all the ID's that match this PIT tag and have a date
# - that is registered at the same date or before
# (excluding ID's that are registered AFTER this pit-tag is read)
IDs <- tb_pit[tb_pit$pit==pit_r & tb_pit$date <= date_r,]
if (nrow(IDs)==0){
# If none found, ID is nA
return(NA)
}
else {
# If some are found, then pick the ID that was registered last
ID = IDs[IDs$date == max(IDs$date),]$ID %>% unlist()
if(length(ID)!=1)
return(NA)
else
return(ID)
}
})
apply(tb,MARGIN = 1,FUN=function(row){
# For every row in the table...
# Get the pit tag and date of this row
row <- as.list(row)
pit_r  <- row$pit
date_r <- row$date
# if any of those are NA, then ID is NA
if (is.na(pit_r) | is.na(date_r)){
return(NA)
}
# get all the ID's that match this PIT tag and have a date
# - that is registered at the same date or before
# (excluding ID's that are registered AFTER this pit-tag is read)
IDs <- tb_pit[tb_pit$pit==pit_r & tb_pit$date <= date_r,]
if (nrow(IDs)==0){
# If none found, ID is nA
return(NA)
}
else {
# If some are found, then pick the ID that was registered last
ID = IDs[IDs$date == max(IDs$date),]$ID %>% unlist()
if(length(ID)!=1)
return(NA)
else
return(ID)
}
})
ID <- apply(tb,MARGIN = 1,FUN=function(row){
# For every row in the table...
# Get the pit tag and date of this row
rowlist <- as.list(row)
pit_r  <- rowlist$pit
date_r <- rowlist$date
# if any of those are NA, then ID is NA
if (is.na(pit_r) | is.na(date_r)){
return(NA)
}
# get all the ID's that match this PIT tag and have a date
# - that is registered at the same date or before
# (excluding ID's that are registered AFTER this pit-tag is read)
IDs <- tb_pit[tb_pit$pit==pit_r & tb_pit$date <= date_r,]
if (nrow(IDs)==0){
# If none found, ID is nA
return(NA)
}
else {
# If some are found, then pick the ID that was registered last
ID = IDs[IDs$date == max(IDs$date),]$ID %>% unlist()
if(length(ID)!=1)
return(NA)
else
return(ID)
}
})
tb_fish$pit
View(tb_fish)
start_time <- Sys.time()
tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit[tb_pit$pit=="A0000000900226000994397" & tb_pit$date <= ymd("2020-11-25"),]
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
a<-tb_pit %>% filter(pit=="A0000000900226000994397" & date <= ymd("2020-11-25"))
end_time <- Sys.time()
end_time - start_time
getID <- function(pit,date){
# if any of those are NA, then ID is NA
if (is.na(pit) | is.na(date)){
return(NA)
}
# get all the ID's that match this PIT tag and have a date
# - that is registered at the same date or before
# (excluding ID's that are registered AFTER this pit-tag is read)
IDs <- tb_pit[tb_pit$pit==pit & tb_pit$date <= date,]
if (nrow(IDs)==0){
# If none found, ID is nA
return(NA)
}
else {
# If some are found, then pick the ID that was registered last
ID = IDs[IDs$date == max(IDs$date),]$ID %>% unlist()
if(length(ID)!=1)
return(NA)
else
return(ID)
}
}
ID <- apply(tb,MARGIN = 1,FUN=function(row){
# For every row in the table...
# Get the pit tag and date of this row
rowlist <- as.list(row)
pit_r  <- rowlist$pit
date_r <- rowlist$date
return(getID(pit_r,date_r))
})
start_time <- Sys.time()
ID <- apply(tb,MARGIN = 1,FUN=function(row){
# For every row in the table...
# Get the pit tag and date of this row
rowlist <- as.list(row)
pit_r  <- rowlist$pit
date_r <- rowlist$date
return(getID(pit_r,date_r))
})
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
tb_fish %>%
mutate(ID = getID(pit,date))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
tb_fish %>%
mutate(ID = getID(pit,ymd(date)))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
tb_fish %>%
rowwise() %>%
mutate(ID = getID(pit,ymd(date)))
end_time <- Sys.time()
end_time - start_time
datepit_to_ID2 = function(tb, tb_pit){
require(lubridate)
# check that pit and date columns exist in the table
if (!"date" %in% colnames(tb)) stop("date column missing from tb")
if (!"pit" %in% colnames(tb)) stop("pit column missing from tb")
if (!"date" %in% colnames(tb_pit)) stop("date column missing from tb")
if (!"pit" %in% colnames(tb_pit)) stop("pit column missing from tb")
# save the old date column in the tb before messing around with it
.oldDate <- tb$date
# format dates, if necessary
tb_pit$date <- ymd(tb_pit$date)
tb$date     <- ymd(tb$date)
getID <- function(pit,date){
}
# the algorithm
tb$ID <- apply(tb,MARGIN = 1,FUN=function(row){
# For every row in the table...
# Get the pit tag and date of this row
rowlist <- as.list(row)
pit_r  <- rowlist$pit
date_r <- rowlist$date
# if any of those are NA, then ID is NA
if (is.na(pit_r) | is.na(date_r)){
return(NA)
}
# get all the ID's that match this PIT tag and have a date
# - that is registered at the same date or before
# (excluding ID's that are registered AFTER this pit-tag is read)
IDs <- tb_pit[tb_pit$pit==pit_r & tb_pit$date <= date_r,]
if (nrow(IDs)==0){
# If none found, ID is nA
return(NA)
}
else {
# If some are found, then pick the ID that was registered last
ID = IDs[IDs$date == max(IDs$date),]$ID %>% unlist()
if(length(ID)!=1)
return(NA)
else
return(ID)
}
})
# put the old date column back and return the table
tb$date <- .oldDate
return(tb)
}
tb_fish_b <-
eiriktools::read_delim_multi(
list_filepaths =list.files(pattern="pheno-P\\d.*txt",recursive=T),
col_types = list(
id              = col_integer(),
mature_female   = col_character(),
dnaID           = col_character(),
ID_fem          = col_character(),
weight_postEggs = col_number()
)
) %>%
mutate(pit = toupper(pit)) %>%
datepit_to_ID2(tb_pit = read_delim("lookup - lammisalmon pit to ID - December 2021.txt"))
a <- tb_fish_a$ID == tb_fish_b$ID
sum(a)
sum(is.na(tb_fish_a$ID))
sum(is.na(tb_fish_b$ID))
a <- (tb_fish_a %>% filter(!is.na(ID)) %>% pull(ID)) == (tb_fish_b %>% filter(!is.na(ID)) %>% pull(ID))
a
sum(a)
length(a)
sum(a==F)
